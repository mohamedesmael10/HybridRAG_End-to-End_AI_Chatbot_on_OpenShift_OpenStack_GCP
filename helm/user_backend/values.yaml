replicaCount: 2

image:
  repository: "us-docker.pkg.dev/my-project/images-repo/user-backend"
  tag: "v1"
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080

resources:
  limits:
    cpu: "1"
    memory: "1Gi"
  requests:
    cpu: "250m"
    memory: "256Mi"

# Environment variables passed to the container at runtime
env:
  EMBEDDING_ENDPOINT: "EMBEDDING_ENDPOINT_PLACEHOLDER"
  CHUNK_URL: "CHUNK_URL_PLACEHOLDER"
  VECTOR_DB_ENDPOINT: "VECTOR_DB_ENDPOINT_PLACEHOLDER"
  DEPLOYED_INDEX_ID: "DEPLOYED_INDEX_ID_PLACEHOLDER"
  MEMORY_STORE_HOST: "MEMORY_STORE_HOST_PLACEHOLDER"
  MEMORY_STORE_PORT: "MEMORY_STORE_PORT_PLACEHOLDER"
  MEMORY_STORE_PASSWORD_SECRET: "redis-password"
  PROJECT_ID: "PROJECT_ID_PLACEHOLDER"
  REGION: "REGION_PLACEHOLDER"
  LLM_MODEL_ID: "gemini-2.0-flash"
  LLM_ENDPOINT: "LLM_ENDPOINT_PLACEHOLDER"
  LLM_TEMPERATURE: "0.2"
  LLM_MAX_OUTPUT_TOKENS: "1024"
  VECTOR_NEIGHBOR_COUNT: "10"


# Liveness / Readiness probes
probe:
  initialDelaySeconds: 10
  periodSeconds: 15
  timeoutSeconds: 5

# Optional ingress (set enabled: true and configure host)
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: user-backend.example.com
      paths:
        - /
  tls: []

# horizontal pod autoscaler (optional)
autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70
